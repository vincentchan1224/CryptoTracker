@model CryptoTracker.Models.PricesViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@Model.Cryptocurrency.Crypto_name Details</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <div class="container mt-4">
        <div class="row">
            <!-- Graph Column -->
            <div class="col-md-6">
                <h2>Price Graph</h2>
                <canvas id="priceChart"></canvas>
            </div>

            <!-- Details Column -->
            <div class="col-md-6">
                <h2>@Model.Cryptocurrency.Crypto_name Details</h2>
                <p><strong>Symbol:</strong> @Model.Cryptocurrency.Crypto_symbol</p>
                <p><strong>Market Cap:</strong> @Model.Cryptocurrency.Market_cap</p>
                <p><strong>Description:</strong> @Html.Raw(Model.Cryptocurrency.Description)</p>
            </div>
        </div>
    </div>

    <script>
        var ctx = document.getElementById('priceChart').getContext('2d');
        var priceChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: @Html.Raw(Json.Encode(Model.Prices.Select(p => p.Timestamp.ToString("yyyy-MM-dd")))),
                datasets: [{
                    label: 'Price',
                    data: @Html.Raw(Json.Encode(Model.Prices.Select(p => p.Price))),
                    borderColor: 'rgb(75, 192, 192)',
                    tension: 0.1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: false
                    }
                }
            }
        });
    </script>
</body>
</html>
